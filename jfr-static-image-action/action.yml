name: 'jfr-static-image-action'
description: 'Build the JFR static image and run the Jenkins pipeline with Jenkinsfile-runner in this built container'
inputs:
  command:
    description: Jenkinsfile-runner command, i.e; run or lint
    default: run
    required: false
  jenkinsfile:
    description: Jenkinsfile location to test
    default: Jenkinsfile
    required: true
  pluginstxt:
    description: plugins list relative location in the repository
    default: plugins.txt
    required: false   
  jcasc:
    description: Jenkins CasC file
    required: false
  baseImage:
    description: Jenkins Base Images. Default base image is ghcr.io/cr1t-gym/jenkinsfile-runner-image-release-test:master
    required: false    
runs:
  using: "composite"
  steps:
    - uses: docker/build-push-action@v2
      if: ${{inputs.baseImage == ''}}
      with:
        tags: users-defined-jenkins:latest
        push: false
        context: ${{github.action_path}}
    - uses: docker/build-push-action@v2
      if: ${{inputs.baseImage != ''}}
      with:
        tags: users-defined-jenkins:latest
        push: false
        context: ${{github.action_path}}
        file: ${{github.action_path}}/Dockerfile_mix
        build-args: |
          BASE_IMAGE=${{inputs.baseImage}}      
    - run: env
      shell: bash
    - uses: addnab/docker-run-action@v3
      with:
        image: users-defined-jenkins:latest
        shell: bash
        options: "-v ${{ github.workspace }}:/work -w /work --env-file <(env | grep '^INPUT_\|^GITHUB_\|^RUNNER_\|^ACTIONS_\|^JENKINS')"
        run: /entrypoint.sh "${{inputs.command}}" "${{inputs.jenkinsfile}}" "${{inputs.pluginstxt}}" "${{inputs.jcasc}}"
  # using: 'docker'
  # image: 'Dockerfile'
  # args:
  #   - ${{inputs.command}}
  #   - ${{inputs.jenkinsfile}}
  #   - ${{inputs.pluginstxt}}
  #   - ${{inputs.jcasc}}