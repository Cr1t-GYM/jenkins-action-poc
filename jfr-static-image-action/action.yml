name: 'jfr-static-image-action'
description: 'Build the JFR static image and run the Jenkins pipeline with Jenkinsfile-runner in this built container'
inputs:
  command:
    description: Jenkinsfile-runner command, i.e; run or lint
    default: run
    required: false
  jenkinsfile:
    description: Jenkinsfile location to test
    default: Jenkinsfile
    required: true
  pluginstxt:
    description: plugins list relative location in the repository
    default: plugins.txt
    required: false   
  jcasc:
    description: Jenkins CasC file
    required: false    
  uploadLog:
    description: whether to upload the pipeline result
    type: boolean
    required: false
    default: false
  cacheMaven:
    description: whether to cache maven dependencies
    type: boolean
    required: false
    default: false    
runs:
  using: "composite"
  steps:
    - name: Set up cache and workspace
      run: mkdir -p jenkinsHome jenkins_new_plugins ~/.m2/repository
      shell: bash
    - uses: actions/cache@v3
      id: cache-jenkins
      name: Cache Jenkins
      with:
        path: jenkins_new_plugins
        key: ${{ runner.os }}-plugins-${{ hashFiles(inputs.pluginstxt) }}
    - name: Cache Maven
      if: ${{inputs.cacheMaven == 'true'}}
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}    
    - uses: docker/build-push-action@v3
      with:
        context: "${{github.action_path}}"
        tags: jenskinsfile-runner-github-actions:latest
        push: false
    - uses: addnab/docker-run-action@v3
      with: 
        image: jenskinsfile-runner-github-actions:latest
        shell: bash
        options: -v "${{ github.workspace }}":/work -v "~/.m2/repository":/root/.m2/repository
        run: /entrypoint.sh ${{inputs.command}} ${{inputs.jenkinsfile}} ${{inputs.pluginstxt}} ${{steps.cache-jenkins.outputs.cache-hit}} ${{inputs.jcasc}}