name: 'jfr-container-action'
description: 'Run the Jenkins pipeline with Jenkinsfile-runner in the predefined container'
inputs:
  command:
    description: Jenkinsfile-runner command, i.e; run or lint
    default: run
    required: false
  jenkinsfile:
    description: Jenkinsfile location to test
    default: Jenkinsfile
    required: true
  pluginstxt:
    description: plugins list relative location in the repository
    default: plugins.txt
    required: false   
  jcasc:
    description: Jenkins CasC file
    required: false
  uploadLog:
    description: whether to upload the pipeline result
    type: boolean
    required: false
    default: false
  cacheMaven:
    description: whether to cache maven dependencies
    type: boolean
    required: false
    default: false        
runs:
  using: "composite"
  steps:
    - name: Set up Jenkins war package
      run: jar -cvf /app/jenkins/jenkins.war /app/jenkins/* && mkdir -p /jenkins_new_plugins && mkdir -p /jenkinsHome
      shell: bash
    - uses: actions/cache@v3
      id: cache-jenkins
      name: Cache Jenkins
      with:
        path: /jenkins_new_plugins
        key: plugins-${{ hashFiles(inputs.pluginstxt) }}
    - name: Download plugins
      if: steps.cache-jenkins.outputs.cache-hit != 'true'
      run: ${GITHUB_ACTION_PATH}/download.sh ${{inputs.pluginstxt}}
      shell: bash
    - name: Move cache
      if: steps.cache-jenkins.outputs.cache-hit == 'true'
      run: ls -al /jenkins_new_plugins && cp -r /jenkins_new_plugins /usr/share/jenkins/ref/plugins
      shell: bash
    - name: Cache Maven
      if: ${{inputs.cacheMaven == 'true'}}
      uses: actions/cache@v3
      with:
        # TODO: need to hardcode home path here because home path will be overriden by GitHub to /github/home
        path: /root/.m2/repository
        key: maven-${{ hashFiles('**/pom.xml') }}      
    - name: Run Jenkins pipeline in the predefined container
      run: ${GITHUB_ACTION_PATH}/setup.sh ${{inputs.command}} ${{inputs.jenkinsfile}} ${{inputs.jcasc}}
      shell: bash
    - name: Upload pipeline Artifacts
      if: ${{inputs.uploadLog == 'true'}}
      uses: actions/upload-artifact@v3
      with:
        name: pipeline-log
        path: /jenkinsHome/jobs/job/builds