name: 'jfr-container-action'
description: 'Run the Jenkins pipeline with Jenkinsfile-runner in the predefined container'
inputs:
  command:
    description: Jenkinsfile-runner command, i.e; run or lint
    default: run
    required: false
  jenkinsfile:
    description: Jenkinsfile location to test
    default: Jenkinsfile
    required: true
  pluginstxt:
    description: plugins list relative location in the repository
    # default: plugins.txt
    required: false   
  jcasc:
    description: Jenkins CasC file
    required: false    
runs:
  using: "composite"
  steps:
    - name: Set up Jenkins war package
      run: jar -cvf /app/jenkins/jenkins.war /app/jenkins/* && mkdir -p /jenkins_new_plugins
      shell: bash
    - uses: actions/cache@v3
      id: cache-jenkins
      name: Cache Jenkins
      with:
        path: /jenkins_new_plugins
        key: ${{ runner.os }}-plugins-${{ hashFiles(inputs.pluginstxt) }}
    - name: Download plugins
      if: steps.cache-jenkins.outputs.cache-hit != 'true'
      run: ${GITHUB_ACTION_PATH}/download.sh ${{inputs.pluginstxt}}
      shell: bash
    - name: Move cache
      if: steps.cache-jenkins.outputs.cache-hit == 'true'
      run: cp /jenkins_new_plugins/* /usr/share/jenkins/ref/plugins && ls -al /jenkins_new_plugins
      shell: bash
    - name: Run Jenkins pipeline in the predefined container
      run: ${GITHUB_ACTION_PATH}/setup.sh ${{inputs.command}} ${{inputs.jenkinsfile}} ${{inputs.jcasc}}
      shell: bash